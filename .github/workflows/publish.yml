name: Publish Release

on:
  push:
    tags:
    - '*'

defaults:
  run:
    shell: bash

jobs:
  build-wheels:
    uses: ./.github/workflows/.build-matrix.yml
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    with:
      runner: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}

  build-sdist:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9" ]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/bootstrap-environ
      id: bootstrap-environ
      with:
        python-version: ${{ matrix.python-version }}
        runner: ${{ matrix.os }}
    - name: Build sdist
      run: poetry build -f sdist
    - name: Store dist artifacts
      uses: actions/upload-artifact@v4
      with:
        name: typelib-dist
        path: dist

  publish-pypi:
    runs-on: ${{ matrix.os }}
    needs: [ build-wheels, build-sdist ]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9" ]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/bootstrap-environ
      id: bootstrap-environ
      with:
        python-version: ${{ matrix.python-version }}
        runner: ubuntu-latest
    - name: Download distribution artifact
      uses: actions/download-artifact@v4
      with:
        name: typelib-dist
        path: dist
    - name: Publish to PyPI
      run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  create-release:
    needs: [ build-wheels, build-sdist ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9" ]
    steps:
    - name: Download distribution artifact
      uses: actions/download-artifact@v4
      with:
        name: typelib-dist
        path: dist
    - name: Compile Release Notes
      run: make release-notes > release-notes.md
    - name: Report Version
      run: echo "RELEASE_VERSION=v$(make report-version)" >> $GITHUB_ENV
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: release-notes.md
        tag_name: ${{ github.env.RELEASE_VERSION }}
        target_commitish: ${{ github.ref }}
        make_latest: true
        files: dist/*
