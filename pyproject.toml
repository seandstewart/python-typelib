[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "typelib"
dynamic = ["version"]
description = "A toolkit for marshalling, unmarshalling, and runtime validation leveraging type annotations."
authors = [{ name = "Sean Stewart", email = "sean.stewart@hey.com" }]
readme = "README.md"
requires-python = ">=3.10,<4.0"
keywords = ["typing", "data", "annotations", "validation", "serdes"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "inflection ~= 0.5",
    "more-itertools ~= 10.4",
    "pendulum ~= 3.0",
    "typing-extensions ~= 4.12",
    "importlib_metadata >=7.1.0,<8; python_version < '3.10'",
]
[project.optional-dependencies]
json = ["orjson ~= 3.4"]

[project.urls]
Repository = "https://github.com/seandstewart/typelib"
Homepage = "https://seandstewart.github.io/python-typelib/latest/"

[dependency-groups]
benchmarks = []
dev = [
    { include-group = "docs" },
    { include-group = "lint" },
    { include-group = "test" },
    "orjson ~= 3.4",
    "hatch-vcs",
    "git-cliff>=2.8.0",
    "ipykernel>=6.29.5",
]
docs = [
    "mkdocs-material[imaging]",
    "mkdocstrings[python]",
    "mkdocs-awesome-pages-plugin",
    "mkdocs-gen-files",
    "pymdown-extensions",
    "mike",
    "mkdocs-section-index",
    "mkdocs-literate-nav",
    "mkdocs-open-in-new-tab",
]
lint = ["pre-commit", "pre-commit-uv"]
test = ["pytest", "pytest-cov", "pytest-parametrize-suite"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "no-guess-dev"

[tool.coverage.run]
branch = true
data_file = "coverage.db"
include = ["src/**/*"]

[tool.coverage.paths]
source = ["src/*"]

[tool.coverage.report]
skip_empty = true
sort = "Cover"
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING:",
    "class\\s\\w+\\((typing\\.)?Protocol(\\[.*\\])?\\):",
    "@(abc\\.)?abstractmethod",
    "@(typing\\.)?overload",
    ".*\\.\\.\\.",
]
omit = ["dist/*", "tests/*", "docs/*", ".venv/*", "benchmark/*"]


[tool.ruff.lint]
extend-select = [
    # Bugbear
    "B",
    # McCabe Complexity
    "C9",
    # isort
    "I",
    # flake8-simplify
    "SIM",
    # Future annotation
    "FA",
]

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files
"__init__.py" = ["E402", "F403"]

[tool.ruff.lint.isort]
known-local-folder = ["tests"]
extra-standard-library = ["typing_extensions", "graphlib"]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src/"
python_version = "3.12"
ignore_missing_imports = true
follow_imports = "silent"
exclude = ".*tests/.*|.*docs/.*"
